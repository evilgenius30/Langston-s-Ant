let res = 15;
let tilesX = 101;
let tilesY = 47;
let tiles = [];
let ant;

function setup() {
  createCanvas(tilesX * res, tilesY * res);
  background(10);
  for (let i = 0; i < tilesX; i++) {
    tiles[i] = [];
    for (let j = 0; j < tilesY; j++) {
      tiles[i][j] = new Tile(res * i, res * j);
    }
  }
  ant = new Ant(tilesX * res / 2, tilesY * res / 2, res - 5);
}

function draw() {
  for (let i = 0; i < tilesX; i++) {
    for (let j = 0; j < tilesY; j++) {
      tiles[i][j].show();
    }
  }
  ant.show();
  locomotion();
  ant.move();
  direction();
}

function locomotion() {
  for (let i = 0; i < tilesX; i++) {
    for (let j = 0; j < tilesY; j++) {
      if (ant.x > i * res && ant.x < (i + 1) * res && ant.y > j * res && ant.y < (j + 1) * res) {
        tiles[i][j].color();
      }
    }
  }
}

function direction() {
  for (let i = 0; i < tilesX; i++) {
    for (let j = 0; j < tilesY; j++) {
      if (ant.x > i * res && ant.x < (i + 1) * res && ant.y > j * res && ant.y < (j + 1) * res) {
        if (tiles[i][j].state == 0) {
          ant.dir += 1;
          if (ant.dir == 4) {
            ant.dir = 0;
          }
        } else if (tiles[i][j].state == 1) {
          ant.dir -= 1;
          if (ant.dir == -1) {
            ant.dir = 3;
          }
        }
      }
    }
  }
}

class Tile {

  constructor(x, y) {
    this.x = x;
    this.y = y;
    this.state = 0;
  }

  show() {
    if (this.state === 0) {
      this.shade = 200;
    } else {
      this.shade = 50;
    }
    fill(this.shade);
    rect(this.x, this.y, res, res);
  }

  color() {
    if (this.state === 0) {
      this.state = 1;
    } else if (this.state === 1) {
      this.state = 0;
    }
  }
}

class Ant {

  constructor(x, y, r) {
    this.x = x;
    this.y = y;
    this.r = r;
    this.dir = 0;
  }

  show() {
    fill(255, 0, 0);
    ellipse(this.x, this.y, this.r, this.r);
  }

  move() {
    if (this.dir === 0) {
      this.y = this.y - res;
    } else if (this.dir === 1) {
      this.x = this.x + res;
    } else if (this.dir === 2) {
      this.y = this.y + res;
    } else if (this.dir === 3) {
      this.x = this.x - res;
    }
  }
}
